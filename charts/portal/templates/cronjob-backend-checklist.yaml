###############################################################
# Copyright (c) 2021,2022 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.backend.checklistworker.name }}
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: {{ .Values.backend.checklistworker.name }}
            securityContext:
              {{- toYaml .Values.securityContext | nindent 16 }}
            image: "{{ .Values.backend.checklistworker.image.name }}:{{ .Values.backend.checklistworker.image.checklistworkertag | default .Chart.AppVersion }}"
            imagePullPolicy: "Always"
            ports:
            - containerPort: {{ .Values.portContainer }}
            env:
            - name: "DOTNET_ENVIRONMENT"
              value: "Kubernetes"
            - name: "Checklist__Bpdm__BaseAdress"
              value: "{{ .Values.backend.checklistworker.bpdm.baseAddress }}"
            - name: "Checklist__Bpdm__ClientId"
              value: "{{ .Values.backend.checklistworker.bpdm.clientId }}"
            - name: "Checklist__Bpdm__ClientSecret"
              value: "{{ .Values.backend.checklistworker.bpdm.clientSecret }}"
            - name: "Checklist__Bpdm__GrantType"
              value: "{{ .Values.backend.checklistworker.bpdm.grantType }}"
            - name: "Checklist__Bpdm__KeyCloakTokenAdress"
              value: "{{ .Values.backend.checklistworker.bpdm.tokenAddress }}"
            - name: "Checklist__Bpdm__Password"
              value: "{{ .Values.backend.checklistworker.bpdm.password }}"
            - name: "Checklist__Bpdm__Scope"
              value: "{{ .Values.backend.checklistworker.bpdm.scope }}"
            - name: "Checklist__Bpdm__Username"
              value: "{{ .Values.backend.checklistworker.bpdm.username }}"
            - name: "Checklist__Custodian__BaseAdress"
              value: "{{ .Values.backend.checklistworker.custodian.baseAddress }}"
            - name: "Checklist__Custodian__ClientId"
              value: "{{ .Values.backend.checklistworker.custodian.clientId }}"
            - name: "Checklist__Custodian__ClientSecret"
              value: "{{ .Values.backend.checklistworker.custodian.clientSecret }}"
            - name: "Checklist__Custodian__GrantType"
              value: "{{ .Values.backend.checklistworker.custodian.grantType }}"
            - name: "Checklist__Custodian__KeyCloakTokenAdress"
              value: "{{ .Values.backend.checklistworker.custodian.tokenAddress }}"
            - name: "Checklist__Custodian__Password"
              value: "{{ .Values.backend.checklistworker.custodian.password }}"
            - name: "Checklist__Custodian__Scope"
              value: "{{ .Values.backend.checklistworker.custodian.scope }}"
            - name: "Checklist__Custodian__Username"
              value: "{{ .Values.backend.checklistworker.custodian.username }}"
            - name: "ConnectionStrings__PortalDB"
              value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.backend.dbConnection.port }};User Id={{ .Values.postgresql.auth.portalUser }};Password={{ .Values.postgresql.secret.portalPassword }};Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
            - name: "Logging__LogLevel__Default"
              value: "{{ .Values.backend.logging.default }}"
            - name: "Logging__LogLevel__Microsoft"
              value: "{{ .Values.backend.logging.microsoft }}"
            - name: "Logging__LogLevel__Microsoft.EntityFrameworkCore.Database.Command"
              value: "{{ .Values.backend.checklistworker.logging.microsoftEntityFrameworkCoreDatabaseCommand }}"
            - name: "Logging__LogLevel__Microsoft.Hosting.Lifetime"
              value: "{{ .Values.backend.logging.microsoftHostingLifetime }}"
            - name: "Logging__LogLevel__Org.CatenaX.Ng.Portal.Backend.Checklist.Library"
              value: "{{ .Values.backend.checklistworker.logging.checklistLibrary }}"
            - name: "Logging__LogLevel__Org.Eclipse.TractusX.Portal.Backend.Bpdm.Library"
              value: "{{ .Values.backend.checklistworker.logging.bpdmLibrary }}"
            - name: "Logging__LogLevel__Org.Eclipse.TractusX.Portal.Backend.Custodian.Library"
              value: "{{ .Values.backend.checklistworker.logging.custodianLibrary }}"
            volumeMounts:
            - name: secrets
              mountPath: /app/secrets
              readOnly: true
          volumes:
          - name: secrets
            secret:
              secretName: {{ .Values.backend.checklistworker.secret.env }}
