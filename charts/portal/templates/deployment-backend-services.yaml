###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.services.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.backend.services.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.services.name }}
    spec:
      containers:
      - name: {{ .Values.backend.services.name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.backend.services.image.name }}:{{ .Values.backend.services.image.servicesservicetag | default .Chart.AppVersion }}"
        imagePullPolicy: "Always"
        ports:
        - containerPort: {{ .Values.portContainer }}
        env:
        - name: "PORTAL_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.auth.existingSecret }}"
              key: "portal-password"
        - name: "PROVISIONING_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgresql.auth.existingSecret }}"
              key: "provisioning-password"
        - name: "CONNECTIONSTRINGS__PORTALDB"
          value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.backend.dbConnection.port }};User Id={{ .Values.postgresql.auth.portalUser }};Password=$(PORTAL_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "CONNECTIONSTRINGS__PROVISIONINGDB"
          value: "Server={{ .Values.postgresql.fullnameOverride }}-primary;Database={{ .Values.postgresql.auth.database }};Port={{ .Values.backend.dbConnection.port }};User Id={{ .Values.postgresql.auth.provisioningUser }};Password=$(PROVISIONING_PASSWORD);Ssl Mode={{ .Values.backend.dbConnection.sslMode }};"
        - name: "DEBUGENABLED"
          value: "{{ .Values.backend.services.debugEnabled }}"
        - name: "JWTBEAREROPTIONS__METADATAADDRESS"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.metadataAddress }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDAUDIENCE"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.tokenValidationParameters.validAudience }}"
        - name: "JWTBEAREROPTIONS__TOKENVALIDATIONPARAMETERS__VALIDISSUER"
          value: "{{ .Values.backend.keycloak.central.jwtBearerOptions.tokenValidationParameters.validIssuer }}"
        - name: "KEYCLOAK__CENTRAL__AUTHREALM"
          value: "{{ .Values.backend.keycloak.central.authRealm }}"
        - name: "KEYCLOAK__CENTRAL__CLIENTID"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "central-client-id"
        - name: "KEYCLOAK__CENTRAL__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "central-client-secret"
        - name: "KEYCLOAK__CENTRAL__CONNECTIONSTRING"
          value: "{{ .Values.backend.keycloak.central.baseAddress }}"
        - name: "KEYCLOAK__SHARED__AUTHREALM"
          value: "{{ .Values.backend.keycloak.shared.authRealm }}"
        - name: "KEYCLOAK__SHARED__CLIENTID"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "shared-client-id"
        - name: "KEYCLOAK__SHARED__CLIENTSECRET"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.keycloak.secret }}"
              key: "shared-client-secret"
        - name: "KEYCLOAK__SHARED__CONNECTIONSTRING"
          value: "{{ .Values.backend.keycloak.shared.baseAddress }}"
        - name: "LOGGING__LOGLEVEL__ORG.CATENAX.NG.PORTAL.BACKEND.OFFERS.LIBRARY.SERVICE"
          value: "{{ .Values.backend.services.logging.offersLibrary }}"
        - name: "MAILINGSERVICE__MAIL__SMTPHOST"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.mailing.secret }}"
              key: "host"
        - name: "MAILINGSERVICE__MAIL__SMTPPASSWORD"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.mailing.secret }}"
              key: "password"
        - name: "MAILINGSERVICE__MAIL__SMTPPORT"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.mailing.secret }}"
              key: "port"
        - name: "MAILINGSERVICE__MAIL__SMTPUSER"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.backend.mailing.secret }}"
              key: "user"
        - name: "PROVISIONING__CENTRALREALM"
          value: "{{ .Values.backend.provisioning.centralRealm }}"
        - name: "PROVISIONING__CENTRALREALMID"
          value: "{{ .Values.backend.provisioning.centralRealmId }}"
        - name: "SERVICES__APPROVESERVICENOTIFICATIONTYPEIDS__0"
          value: "{{ .Values.backend.services.approveServiceNotificationTypeIds.type0 }}"
        - name: "SERVICES__APPROVESERVICEUSERROLES__CL2-CX-PORTAL__0"
          value: "{{ .Values.backend.services.approveServiceUserRoles.role0 }}"
        - name: "SERVICES__APPROVESERVICEUSERROLES__CL2-CX-PORTAL__1"
          value:  "{{ .Values.backend.services.approveServiceUserRoles.role1 }}"
        - name: "SERVICES__BASEPORTALADDRESS"
          value: "{{ .Values.backend.basePortalAddress }}"
        - name: "SERVICES__CATENAADMINROLES__CL2-CX-PORTAL__0"
          value: "{{ .Values.backend.services.catenaAdminRoles.role }}"
        - name: "SERVICES__CONTENTTYPESETTINGS__0"
          value: "{{ .Values.backend.services.contentTypeSettings.setting0 }}"
        - name: "SERVICES__DOCUMENTTYPEIDS__0"
          value: "{{ .Values.backend.services.documentTypeIds.type0 }}"
        - name: "SERVICES__ITADMINROLES__CL2-CX-PORTAL__0"
          value: "{{ .Values.backend.services.ITAdminRoles.role }}"
        - name: "SERVICES__SALESMANAGERROLES__CL2-CX-PORTAL__0"
          value: "{{ .Values.backend.services.salesManagerRoles.role }}"
        - name: "SERVICES__SERVICEACCOUNTROLES__TECHNICAL_ROLES_MANAGEMENT__0"
          value: "{{ .Values.backend.services.serviceAccountRoles.role }}"
        - name: "SERVICES__SERVICEMANAGERROLES__CL2-CX-PORTAL__0"
          value: "{{ .Values.backend.services.serviceManagerRoles.role }}"
        - name: "SERVICES__SERVICEMARKETPLACEADDRESS"
          value: "{{ .Values.backend.services.serviceMarketplaceAddress }}"
        - name: "SERVICES__SUBMITSERVICENOTIFICATIONTYPEIDS__0"
          value: "{{ .Values.backend.services.submitServiceNotificationTypeIds.type0 }}"
        - name: "SWAGGERENABLED"
          value: "{{ .Values.backend.services.swaggerEnabled }}"
