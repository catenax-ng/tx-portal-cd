###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

portalAddress: "https://portal.dev.demo.catena-x.net"
portalBackendAddress: "https://portal-backend.dev.demo.catena-x.net"
centralidpAddress: "https://centralidp.dev.demo.catena-x.net"
sharedidpAddress: "https://sharedidp.dev.demo.catena-x.net"
semanticsAddress: "https://semantics.dev.demo.catena-x.net"
dapsAddress: "https://drs.dev.demo.catena-x.net"
bpdmPartnersPoolAddress: "https://partners-pool.dev.demo.catena-x.net"
bpdmPortalGateAddress: "https://portal-gate.dev.demo.catena-x.net"
custodianAddress: "https://managed-identity-wallets.dev.demo.catena-x.net"
sdfactoryAddress: "https://sdfactory.dev.demo.catena-x.net"
clearinghouseAddress: "https://validation.dev.dih-cloud.com"
clearinghouseTokenAddress: "https://iam.dev.dih-cloud.com/realms/notarisation/protocol/openid-connect/token"

frontend:

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: "/$1"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000, https://*.dev.demo.catena-x.net"
    tls:
      - secretName: "tls-secret"
        hosts:
          - "portal.dev.demo.catena-x.net"
    hosts:
      - host: "portal.dev.demo.catena-x.net"
        paths:
          - path: "/(.*)"
            pathType: "Prefix"
            backend:
              service: "portal"
              port: 8080
          - path: "/registration/(.*)"
            pathType: "Prefix"
            backend:
              service: "registration"
              port: 8080
          - path: "/((assets|documentation)/.*)"
            pathType: "Prefix"
            backend:
              service: "assets"
              port: 8080

  portal:
    image:
      portaltag: 4322d63a0fac6cf10a99a79073aef2ccf76a0e3f

  assets:
    image:
      assetstag: main_37c376f20dcc5cbcc46838132574445cda1d601d

  registration:
    image:
      registrationtag: dev_6afb0bae04e7a318ff2d386016239272295f1475

backend:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "8m"
      nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000, https://*.dev.demo.catena-x.net"
    tls:
      - secretName: "tls-secret"
        hosts:
          - "portal-backend.dev.demo.catena-x.net"
    hosts:
      - host: "portal-backend.dev.demo.catena-x.net"
        paths:
          - path: "/api/registration"
            pathType: "Prefix"
            backend:
              service: "registration-service"
              port: 8080
          - path: "/api/administration"
            pathType: "Prefix"
            backend:
              service: "administration-service"
              port: 8080
          - path: "/api/notification"
            pathType: "Prefix"
            backend:
              service: "notification-service"
              port: 8080
          - path: "/api/provisioning"
            pathType: "Prefix"
            backend:
              service: "provisioning-service"
              port: 8080
          - path: "/api/apps"
            pathType: "Prefix"
            backend:
              service: "marketplace-app-service"
              port: 8080
          - path: "/api/services"
            pathType: "Prefix"
            backend:
              service: "services-service"
              port: 8080

  keycloak:
    central:
      clientId: "<path:portal/data/keycloak#central-client-id>"
      clientSecret: "<path:portal/data/dev/keycloak#central-client-secret>"
      dbConnection:
        password: "<path:portal/data/dev/keycloak#central-db-password>"
    shared:
      clientId: "<path:portal/data/keycloak#shared-client-id>"
      clientSecret: "<path:portal/data/dev/keycloak#shared-client-secret>"

  mailing:
    host: "<path:portal/data/mailing#host>"
    port: "<path:portal/data/mailing#port>"
    user: "<path:portal/data/mailing#user>"
    password: "<path:portal/data/mailing#password>"

  registration:
    image:
      registrationservicetag: 53017fff86f9a86acf7787768bb23c5a72ad6089
    logging:
      registrationServiceBpn: "Debug"
    swaggerEnabled: true

  administration:
    image:
      administrationservicetag: 53017fff86f9a86acf7787768bb23c5a72ad6089
    logging:
      businessLogic: "Debug"
      sdfactoryLibrary: "Debug"
    daps:
      clientId: "<path:portal/data/administration#daps-client-id>"
      clientSecret: "<path:portal/data/dev/administration#daps-client-secret>"
    swaggerEnabled: true

  provisioning:
    sharedRealm:
      smtpServer:
        host: "<path:portal/data/mailing#host>"
        port: "<path:portal/data/mailing#port>"
        user: "<path:portal/data/mailing#user>"
        password: "<path:portal/data/mailing#password>"
        from: "<path:portal/data/mailing#from>"
        replyTo: "<path:portal/data/mailing#replyto>"
    service:
      image:
        provisioningservicetag: 95e7e86e4bbb2b502ae6a0188808eb4d5a6716c1
      swaggerEnabled: true

  appmarketplace:
    image:
      appmarketplaceservicetag: 95e7e86e4bbb2b502ae6a0188808eb4d5a6716c1
    logging:
      offersLibrary: "Debug"
    swaggerEnabled: true

  portalmigrations:
    image:
      portalmigrationstag: 53017fff86f9a86acf7787768bb23c5a72ad6089
    seeding:
      testDataEnvironments: "consortia"

  portalmaintenance:
    image:
      portalmaintenancetag: 53017fff86f9a86acf7787768bb23c5a72ad6089

  notification:
    image:
      notificationservicetag: 53017fff86f9a86acf7787768bb23c5a72ad6089
    swaggerEnabled: true

  services:
    image:
      servicesservicetag: 53017fff86f9a86acf7787768bb23c5a72ad6089
    logging:
      offersLibrary: "Debug"
    swaggerEnabled: true

  provisioningmigrations:
    image:
      provisioningmigrationstag: 00053824be00ca452de731934c0f9113154cb003

  checklistworker:
    image:
      checklistworkertag: 95e7e86e4bbb2b502ae6a0188808eb4d5a6716c1
    logging:
      checklistLibrary: "Debug"
      bpdmLibrary: "Debug"
      clearinghouseLibrary: "Debug"
      custodianLibrary: "Debug"
      sdfactoryLibrary: "Debug"
    bpdm:
      clientId: "<path:portal/data/checklist-worker#bpdm-client-id>"
      clientSecret: "<path:portal/data/dev/checklist-worker#bpdm-client-secret>"
    clearinghouse:
      clientId: "<path:portal/data/checklist-worker#clearinghouse-client-id>"
      clientSecret: "<path:portal/data/dev/checklist-worker#clearinghouse-client-secret>"
    custodian:
      clientId: "<path:portal/data/checklist-worker#custodian-client-id>"
      clientSecret: "<path:portal/data/dev/checklist-worker#custodian-client-secret>"
    sdfactory:
      issuerBpn: "BPNL00000003CRHK"
      clientId: "<path:portal/data/checklist-worker#sdfactory-client-id>"
      clientSecret: "<path:portal/data/dev/checklist-worker#sdfactory-client-secret>"

postgresql:
  auth:
    password: "<path:portal/data/dev/postgres#postgres-password>"
    replicationPassword: "<path:portal/data/dev/postgres#replication-password>"
    portalPassword: "<path:portal/data/dev/postgres#portal-password>"
    provisioningPassword: "<path:portal/data/dev/postgres#provisioning-password>"
