###############################################################
# Copyright (c) 2021, 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################

name: "portal"
portContainer: 8080
portService: 8080
replicaCount: 3
securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  capabilities:
    drop: ["ALL"]

portalAddress: "https://portal.dummy"
portalBackendAddress: "https://portal-backend.dummy"
centralidpAddress: "https://centralidp.dummy"
sharedidpAddress: "https://sharedidp.dummy"
semanticsAddress: "https://semantics.dummy"
dapsAddress: "https://daps.dummy"
bpdmPartnersPoolAddress: "https://partners-pool.dummy"
bpdmPortalGateAddress: "https://portal-gate.dummy"
custodianAddress: "https://managed-identity-wallets.dummy"
sdfactoryAddress: "https://sdfactory.dummy"
clearinghouseAddress: "https://validation.dummy"
clearinghouseTokenAddress: "https://keycloak.dummy/realms/dummy/protocol/openid-connect/token"

frontend:
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: "/$1"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: ""
    tls:
      - secretName: ""
        hosts:
          - ""
    hosts:
      - host: ""
        paths:
          - path: "/(.*)"
            pathType: "Prefix"
            backend:
              service: "portal"
              port: 8080
          - path: "/registration/(.*)"
            pathType: "Prefix"
            backend:
              service: "registration"
              port: 8080
          - path: "/((assets|documentation)/.*)"
            pathType: "Prefix"
            backend:
              service: "assets"
              port: 8080
  portal:
    name: "portal"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-frontend"
      portaltag: 1.0.0-RC8
  registration:
    name: "registration"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-frontend-registration"
      registrationtag: 1.0.0-RC4
  assets:
    name: "assets"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-assets"
      assetstag: 1.0.0-RC6
    path: "/assets"
  centralidpAuthPath: "/auth"
  bpdmPartnersPoolApiPath: "/api"

backend:
  ingress:
    enabled: false
    name: "portal-backend"
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "8m"
      nginx.ingress.kubernetes.io/cors-allow-origin: ""
    tls:
      - secretName: ""
        hosts:
          - ""
    hosts:
      - host: ""
        paths:
          - path: "/api/registration"
            pathType: "Prefix"
            backend:
              service: "registration-service"
              port: 8080
          - path: "/api/administration"
            pathType: "Prefix"
            backend:
              service: "administration-service"
              port: 8080
          - path: "/api/notification"
            pathType: "Prefix"
            backend:
              service: "notification-service"
              port: 8080
          - path: "/api/provisioning"
            pathType: "Prefix"
            backend:
              service: "provisioning-service"
              port: 8080
          - path: "/api/apps"
            pathType: "Prefix"
            backend:
              service: "marketplace-app-service"
              port: 8080
          - path: "/api/services"
            pathType: "Prefix"
            backend:
              service: "services-service"
              port: 8080
  dbConnection:
    port: "5432"
    schema: "portal"
    sslMode: "Disable"
  portalHomePath: "/home"
  userManagementPath: "/usermanagement"
  keycloak:
    secret: "secret-backend-keycloak"
    central:
      clientId: "central-client-id"
      clientSecret: ""
      authRealm: "CX-Central"
      jwtBearerOptions:
        metadataPath: "/auth/realms/CX-Central/.well-known/openid-configuration"
        tokenValidationParameters:
          validIssuerPath: "/auth/realms/CX-Central"
          validAudiencePortal: "Cl2-CX-Portal"
          validAudienceRegistration: "Cl1-CX-Registration"
      tokenPath: "/auth/realms/CX-Central/protocol/openid-connect/token"
      dbConnection:
        host: "centralidp-postgresql-primary"
        port: "5432"
        user: "kccentral"
        database: "iamcentralidp"
        password: ""
        schema: "public"
        sslMode: "Disable"
    shared:
      clientId: "shared-client-id"
      clientSecret: ""
      authRealm: "master"
  mailing:
    secret: "secret-backend-mailing"
    host: "smtp.example.org"
    port: "587"
    user: "smtp-user"
    password: ""
  # secret data (client-ids and client-secrets) for interfaces (daps, custodian, bpdm, sdFactory, clearinghouse) of the backend services and jobs
  interfaces:
    secret: "secret-backend-interfaces"
  registration:
    name: "registration-service"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_registration-service"
      registrationservicetag: v1.0.0-RC8
    logging:
      registrationServiceBpn: "Information"
    portalRegistrationPath: "/registration"
    keycloakClientId: "Cl1-CX-Registration"
    applicationStatusIds:
      status0: "SUBMITTED"
      status1: "DECLINED"
      status2: "CONFIRMED"
    documentTypeIds:
      type0: "CX_FRAME_CONTRACT"
      type1: "COMMERCIAL_REGISTER_EXTRACT"
    swaggerEnabled: false
  administration:
    name: "administration-service"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_administration-service"
      administrationservicetag: v1.0.0-RC8
    logging:
      businessLogic: "Information"
    connectors:
      validCertificationContentTypes:
        type0: "application/x-pem-file"
        type1: "application/x-x509-ca-cert"
        type2: "application/pkix-cert"
        type3: "application/octet-stream"
    keycloakClientId: "Cl2-CX-Portal"
    daps:
      apiPath: "/api/v1/daps"
      scope: "openid"
      grantType: "client_credentials"
      clientId: "daps-client-id"
      clientSecret: ""
    identityProviderAdmin:
      csvSettings:
        fileName: "identityproviderlinks.csv"
        contentType: "text/csv"
        charset: "UTF-8"
        separator: ","
        headerUserId: "UserId"
        headerFirstName: "FirstName"
        headerLastName: "LastName"
        headerEmail: "Email"
        headerProviderAlias: "ProviderAlias"
        headerProviderUserId: "ProviderUserId"
        headerProviderUserName: "ProviderUserName"
    invitation:
      invitedUserInitialRoles:
        role0: "Company Admin"
    registration:
      partnerUserInitialRoles:
        role0: "Company Admin"
      documentTypeIds:
        type0: "COMMERCIAL_REGISTER_EXTRACT"
    userManagement:
      companyUserStatusIds:
        status0: "ACTIVE"
        status1: "INACTIVE"
    serviceAccount:
      clientId: "technical_roles_management"
    swaggerEnabled: false
  provisioning:
    centralRealm: "CX-Central"
    centralRealmId: "CX-Central"
    invitedUserInitialRoles:
      registration: "Company Admin"
    serviceAccountClientPrefix: "sa"
    centralIdentityProvider:
      clientId: "central-idp"
    sharedRealmClient:
      clientId: "central-idp"
    sharedRealm:
      smtpServer:
        host: "smtp.example.org"
        port: "587"
        user: "smtp-user"
        password: ""
        ssl: ""
        startTls: "true"
        auth: "true"
        from: "smtp@example.org"
        replyTo: "smtp@example.org"
    service:
      name: "provisioning-service"
      image:
        name: "ghcr.io/catenax-ng/tx-portal-backend_provisioning-service"
        provisioningservicetag: v1.0.0-RC8
      swaggerEnabled: false
  appmarketplace:
    name: "marketplace-app-service"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_marketplace-app-service"
      appmarketplaceservicetag: v1.0.0-RC8
    logging:
      offersLibrary: "Information"
    appOverviewPath: "/appoverview"
    catenaAdminRoles:
      role0: "CX Admin"
    serviceAccountRoles:
      role0: "App Tech User"
    salesManagerRoles:
      role0: "Sales Manager"
    serviceManagerRoles:
      role0: "App Manager"
    activeAppCompanyAdminRoles:
      role0: "IT Admin"
      role1: "Company Admin"
    approveAppUserRoles:
      role0: "Sales Manager"
      role1: "Service Manager"
    ITAdminRoles:
      role0: "IT Admin"
    documentTypeIds:
      type0: "APP_CONTRACT"
      type1: "APP_DATA_DETAILS"
      type2: "ADDITIONAL_DETAILS"
      type3: "APP_TECHNICAL_INFORMATION"
      type4: "APP_LEADIMAGE"
      type5: "APP_IMAGE"
    contentTypeSettings:
      setting0: "application/pdf"
      setting1: "image/jpeg"
      setting2: "image/png"
    notificationTypeIds:
      type0: "APP_RELEASE_REQUEST"
    activeAppNotificationTypeIds:
      type0: "APP_ROLE_ADDED"
    submitAppNotificationTypeIds:
      type0: "APP_RELEASE_REQUEST"
    approveAppNotificationTypeIds:
      type0: "APP_RELEASE_APPROVAL"
    appImageDocumentTypeIds:
      type0: "APP_LEADIMAGE"
      type1: "APP_IMAGE"
    offerStatusIds:
      status0: "IN_REVIEW"
      status1: "ACTIVE"
    swaggerEnabled: false
  portalmigrations:
    name: "portal-migrations"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_portal-migrations"
      portalmigrationstag: v1.0.0-RC8
    seeding:
      testDataEnvironments: ""
  portalmaintenance:
    name: "portal-maintenance"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_maintenance-service"
      portalmaintenancetag: v1.0.0-RC8
  notification:
    name: "notification-service"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_notification-service"
      notificationservicetag: v1.0.0-RC8
    swaggerEnabled: false
  services:
    name: "services-service"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_services-service"
      servicesservicetag: v1.0.0-RC8
    logging:
      offersLibrary: "Information"
    serviceMarketplacePath: "/servicemarketplace"
    catenaAdminRoles:
      role0: "CX Admin"
    serviceAccountRoles:
      role0: "App Tech User"
    salesManagerRoles:
      role0: "Sales Manager"
    serviceManagerRoles:
      role0: "Service Manager"
    approveServiceUserRoles:
      role0: "Sales Manager"
      role1: "Service Manager"
    ITAdminRoles:
      role0: "IT Admin"
    documentTypeIds:
      type0: "ADDITIONAL_DETAILS"
    contentTypeSettings:
      setting0: "application/pdf"
    submitServiceNotificationTypeIds:
      type0: "SERVICE_RELEASE_REQUEST"
    approveServiceNotificationTypeIds:
      type0: "SERVICE_RELEASE_APPROVAL"
    swaggerEnabled: false
  provisioningmigrations:
    name: "provisioning-migrations"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_provisioning-migrations"
      provisioningmigrationstag: v1.0.0-RC8
  checklistworker:
    name: "checklist-worker"
    image:
      name: "ghcr.io/catenax-ng/tx-portal-backend_checklist-worker"
      checklistworkertag: v1.0.0-RC8
    secret: "secret-checklist-worker"
    logging:
      checklistLibrary: "Information"
      bpdmLibrary: "Information"
      clearinghouseLibrary: "Information"
      custodianLibrary: "Information"
      sdfactoryLibrary: "Information"
    applicationActivation:
      applicationApprovalInitialRoles:
        portal:
          role0: "Company Admin"
        registration:
          role0: "Company Admin"
      clientToRemoveRolesOnActivation:
        client0: "Cl1-CX-Registration"
      welcomeNotificationTypeIds:
        type0: "WELCOME"
        type1: "WELCOME_USE_CASES"
        type2: "WELCOME_SERVICE_PROVIDER"
        type3: "WELCOME_CONNECTOR_REGISTRATION"
        type4: "WELCOME_APP_MARKETPLACE"
    bpdm:
      scope: "openid"
      grantType: "client_credentials"
      clientId: "bpdm-client-id"
      clientSecret: ""
    custodian:
      scope: "openid"
      grantType: "client_credentials"
      clientId: "custodian-client-id"
      clientSecret: ""
    sdfactory:
      selfdescriptionPath: "/selfdescription"
      scope: "openid"
      grantType: "client_credentials"
      issuerBpn: "BPNDUMMY000DUMMY"
      clientId: "sdfactory-client-id"
      clientSecret: ""
    clearinghouse:
      scope: "openid"
      grantType: "client_credentials"
      clientId: "clearinghouse-client-id"
      clientSecret: ""
      callbackPath: "/api/administration/registration/clearinghouse" 
  placeholder: "empty"

postgresql:
  enabled: true
  fullnameOverride: "portal-backend-postgresql"
  auth:
    database: "postgres"
    existingSecret: "secret-postgres-init"
    password: ""
    replicationPassword: ""
    # custom users for cx portal
    portalUser: "portal"
    provisioningUser: "provisioning"
    portalPassword: ""
    provisioningPassword: ""
  architecture: "replication"
  audit:
    pgAuditLog: "write, ddl"
    logLinePrefix: "%m %u %d "
  primary:
    initdb:
      scriptsConfigMap: "configmap-postgres-init"
    extraEnvVars:
      - name: "PORTAL_PASSWORD"
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.auth.existingSecret }}"
            key: "portal-password"
      - name: "PROVISIONING_PASSWORD"
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.auth.existingSecret }}"
            key: "provisioning-password"

pgadmin4:
  enabled: false
  ingress:
    enabled: false
